import 'package:degree_app/teacher/teacher.dart';

final mockSubjectList = <Subject>[
  Subject(id: 0, name: 'Математика'),
  Subject(id: 1, name: 'Русский язык'),
  Subject(id: 2, name: 'Физика'),
  Subject(id: 3, name: 'Информатика'),
  Subject(id: 4, name: 'История'),
  Subject(id: 5, name: 'Английский язык'),
  Subject(id: 6, name: 'Биология'),
  Subject(id: 7, name: 'География'),
  Subject(id: 8, name: 'Обществознание'),
  Subject(id: 9, name: 'Литература'),
  Subject(id: 10, name: 'Химия'),
  Subject(id: 11, name: 'Физкультура'),
  Subject(id: 12, name: 'Музыка'),
  Subject(id: 13, name: 'ИЗО'),
  Subject(id: 14, name: 'Технология'),
  Subject(id: 15, name: 'Экология'),
  Subject(id: 16, name: 'Немецкий язык'),
  Subject(id: 17, name: 'Французский язык'),
];

final mockSubgroupList = <Subgroup>[
  Subgroup(id: 0, name: 'КС-11/1'),
  Subgroup(id: 1, name: 'КС-11/2'),
  Subgroup(id: 2, name: 'КС-21/1'),
  Subgroup(id: 3, name: 'КС-21/2'),
  Subgroup(id: 4, name: 'КС-31/1'),
  Subgroup(id: 5, name: 'КС-31/2'),
  Subgroup(id: 6, name: 'КС-41/1'),
  Subgroup(id: 7, name: 'КС-41/2'),
  Subgroup(id: 8, name: 'КС-51/1'),
];

final mockGroupList = <Group>[
  Group(
    id: 0,
    name: 'КС-11',
    speciality: mockSpecialityList[0],
    course: 1,
    subgroups: [mockSubgroupList[0], mockSubgroupList[1]],
  ),
  Group(
    id: 1,
    name: 'КС-21',
    speciality: mockSpecialityList[0],
    course: 2,
    subgroups: [mockSubgroupList[2], mockSubgroupList[3]],
  ),
  Group(
    id: 2,
    name: 'КС-31',
    speciality: mockSpecialityList[0],
    course: 3,
    subgroups: [mockSubgroupList[4], mockSubgroupList[5]],
  ),
  Group(
    id: 3,
    name: 'КС-41',
    speciality: mockSpecialityList[0],
    course: 4,
    subgroups: [mockSubgroupList[6], mockSubgroupList[7]],
  ),
  Group(
    id: 4,
    name: 'КС-51',
    speciality: mockSpecialityList[0],
    course: 5,
    subgroups: [mockSubgroupList[8]],
  ),
];

List<Speciality> mockSpecialityList = [
  Speciality(id: 0, name: 'Компьютерные сети'),
  Speciality(id: 1, name: 'Бухгалтерский учет, анализ и аудит'),
  Speciality(id: 2, name: 'Менеджмент'),
  Speciality(id: 3, name: 'Маркетинг'),
  Speciality(id: 4, name: 'Экономика'),
  Speciality(id: 5, name: 'Право'),
  Speciality(id: 6, name: 'Психология'),
];

final mockUserList = <User>[
  Teacher(
    userId: 0,
    firstName: 'Сергей',
    secondName: 'Кочетков',
    middleName: 'Дмитриевич',
    teacherId: 0,
    subjects: [],
  ),
  Teacher(
    userId: 1,
    firstName: 'Александр',
    secondName: 'Кочетков',
    teacherId: 1,
    subjects: [],
  ),
  Teacher(
    userId: 2,
    firstName: 'Александр',
    secondName: 'Бараковский',
    middleName: 'Александрович',
    teacherId: 2,
    subjects: [],
  ),
  Student(
    studentId: 0,
    firstName: 'Татьяна',
    secondName: 'китунькина',
    group: mockGroupList[0],
    subgroup: mockSubgroupList[0],
  ),
  Student(
    studentId: 1,
    firstName: 'Александр',
    secondName: 'Кочетков',
    group: mockGroupList[0],
    subgroup: mockSubgroupList[0],
  ),
  Student(
    studentId: 2,
    firstName: 'Александр',
    secondName: 'Бараковский',
    group: mockGroupList[0],
    subgroup: mockSubgroupList[0],
  ),
  Student(
    studentId: 3,
    firstName: 'Александр',
    secondName: 'Богдашкин',
    group: mockGroupList[0],
    subgroup: mockSubgroupList[0],
  ),
];

final mockLessonList = <Lesson>[
  Lesson(
    id: 0,
    subject: mockSubjectList[0],
    teacher: mockUserList[1] as Teacher,
    lessonType: mockLessonsType[0],
    numberLesson: 1,
    date: DateTime.now(),
    cabinet: 322,
    group: mockGroupList[0],
  ),
  Lesson(
    id: 1,
    subject: mockSubjectList[1],
    teacher: mockUserList[1] as Teacher,
    lessonType: mockLessonsType[0],
    numberLesson: 2,
    date: DateTime.now(),
    cabinet: 203,
    subgroup: mockSubgroupList[0],
  ),
  Lesson(
    id: 2,
    subject: mockSubjectList[1],
    teacher: mockUserList[1] as Teacher,
    lessonType: mockLessonsType[0],
    numberLesson: 3,
    date: DateTime.now(),
    cabinet: 93,
    subgroup: mockSubgroupList[1],
  ),
  Lesson(
    id: 3,
    subject: mockSubjectList[2],
    teacher: mockUserList[1] as Teacher,
    lessonType: mockLessonsType[0],
    numberLesson: 4,
    date: DateTime.now(),
    cabinet: 222,
    group: mockGroupList[2],
  ),
  Lesson(
    id: 4,
    subject: mockSubjectList[3],
    teacher: mockUserList[1] as Teacher,
    lessonType: mockLessonsType[0],
    numberLesson: 1,
    date: DateTime.now().add(const Duration(days: 1)),
    cabinet: 201,
    group: mockGroupList[4],
  ),
  Lesson(
    id: 5,
    subject: mockSubjectList[4],
    teacher: mockUserList[1] as Teacher,
    lessonType: mockLessonsType[0],
    numberLesson: 2,
    date: DateTime.now().add(const Duration(days: 1)),
    cabinet: 201,
    group: mockGroupList[3],
  ),
  Lesson(
    id: 6,
    subject: mockSubjectList[5],
    teacher: mockUserList[1] as Teacher,
    lessonType: mockLessonsType[0],
    numberLesson: 3,
    date: DateTime.now().add(const Duration(days: 1)),
    cabinet: 201,
    student: mockUserList[4] as Student,
  ),
  Lesson(
    id: 7,
    subject: mockSubjectList[6],
    teacher: mockUserList[1] as Teacher,
    lessonType: mockLessonsType[0],
    numberLesson: 4,
    date: DateTime.now().add(const Duration(days: 2)),
    cabinet: 201,
    subgroup: mockSubgroupList[5],
  ),
  Lesson(
    id: 8,
    subject: mockSubjectList[7],
    teacher: mockUserList[1] as Teacher,
    lessonType: mockLessonsType[0],
    numberLesson: 1,
    date: DateTime.now().add(const Duration(days: 3)),
    cabinet: 201,
    group: mockGroupList[3],
  ),
  Lesson(
    id: 9,
    subject: mockSubjectList[8],
    teacher: mockUserList[1] as Teacher,
    lessonType: mockLessonsType[0],
    numberLesson: 2,
    date: DateTime.now().add(const Duration(days: 3)),
    cabinet: 201,
    group: mockGroupList[1],
  ),
];

final mockLessonsType = <LessonType>[
  LessonType(id: 0, name: 'Лекция'),
  LessonType(id: 1, name: 'Практика'),
  LessonType(id: 2, name: 'Лабораторная'),
  LessonType(id: 3, name: 'Семинар'),
  LessonType(id: 4, name: 'Консультация'),
];

final groupNames = [
  'ИСиТ',
  'БУАА',
  'МЕН',
  'МАР',
  'ЭКО',
  'ПРА',
  'ПСИ',
];
const secondNames = <String>[
  'Кочетков',
  'Богдашкин',
  'Кузнецов',
  'Смирнов',
  'Иванов',
  'Петров',
  'Соколов',
  'Михайлов',
  'Новиков',
  'Федоров',
  'Морозов',
  'Волков',
  'Алексеев',
];
const firstNames = <String>[
  'Александр',
  'Алексей',
  'Анатолий',
  'Андрей',
  'Виталий',
  'Владимир',
  'Владислав',
  'Владлен',
  'Вячеслав',
  'Геннадий',
  'Георгий',
  'Игорь',
  'Илья',
  'Кирилл',
  'Константин',
  'Лев',
  'Леонид',
  'Максим',
  'Марк',
  'Матвей',
  'Михаил',
];
const middleNames = <String>[
  'Александрович',
  'Алексеевич',
  'Анатольевич',
  'Андреевич',
  'Витальевич',
  'Владимирович',
  'Владиславович',
  'Владленович',
  'Вячеславович',
  'Геннадьевич',
  'Георгиевич',
  'Игоревич',
  'Ильич',
  'Кириллович',
  'Константинович',
  'Львович',
  'Леонидович',
  'Максимович',
  'Маркович',
  'Матвеевич',
  'Михайлович',
];
