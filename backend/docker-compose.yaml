version: '3.8'

services:

  degree_auth_service:
    container_name: auth_service
    build: ./auth_service
    expose:
      - ${AUTH_SERVICE_PORT}
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}
      - AUTH_SERVICE_HOST=${AUTH_SERVICE_HOST}
      - AUTH_DATABASE_HOST=${AUTH_DATABASE_HOST}
      - AUTH_DATABASE_PORT=${AUTH_DATABASE_PORT}
      - AUTH_DATABASE_NAME=${AUTH_DATABASE_NAME}
      - AUTH_DATABASE_USERNAME=${AUTH_DATABASE_USERNAME}
      - AUTH_DATABASE_PASSWORD=${AUTH_DATABASE_PASSWORD}
      - REFRESH_TOKEN_EXPIRATION=${REFRESH_TOKEN_EXPIRATION}
      - ACCESS_TOKEN_EXPIRATION=${ACCESS_TOKEN_EXPIRATION}
      - ADMIN_REGISTERCODE=${ADMIN_REGISTERCODE}
    restart: always
    depends_on:
      - degree_auth_db
    networks:
      - degree_network

  degree_schedule_service:
    container_name: shedule_service
    build: ./schedule_service
    expose:
      - ${SCHEDULE_SERVICE_PORT}
    ports:
      - "${SCHEDULE_SERVICE_PORT}:${SCHEDULE_SERVICE_PORT}"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - SCHEDULE_SERVICE_PORT=${SCHEDULE_SERVICE_PORT}
      - SCHEDULE_SERVICE_HOST=${SCHEDULE_SERVICE_HOST}
      - SCHEDULE_DATABASE_HOST=${SCHEDULE_DATABASE_HOST}
      - SCHEDULE_DATABASE_PORT=${SCHEDULE_DATABASE_PORT}
      - SCHEDULE_DATABASE_NAME=${SCHEDULE_DATABASE_NAME}
      - SCHEDULE_DATABASE_USERNAME=${SCHEDULE_DATABASE_USERNAME}
      - SCHEDULE_DATABASE_PASSWORD=${SCHEDULE_DATABASE_PASSWORD}
      - AUTH_SERVICE_HOST=${AUTH_SERVICE_HOST}
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}
    restart: always
    depends_on:
      - degree_auth_db
      - degree_auth_service
      - degree_schedule_db
    networks:
      - degree_network
  degree_task_service:
    container_name: task_service
    build: ./task_service
    expose:
      - ${TASK_SERVICE_PORT}
    ports:
      - "${TASK_SERVICE_PORT}:${TASK_SERVICE_PORT}"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - TASK_SERVICE_PORT=${TASK_SERVICE_PORT}
      - TASK_SERVICE_HOST=${TASK_SERVICE_HOST}
      - TASK_DATABASE_HOST=${TASK_DATABASE_HOST}
      - TASK_DATABASE_PORT=${TASK_DATABASE_PORT}
      - TASK_DATABASE_NAME=${TASK_DATABASE_NAME}
      - TASK_DATABASE_USERNAME=${TASK_DATABASE_USERNAME}
      - TASK_DATABASE_PASSWORD=${TASK_DATABASE_PASSWORD}
      - SCHEDULE_DATABASE_HOST=${SCHEDULE_DATABASE_HOST}
      - SCHEDULE_DATABASE_PORT=${SCHEDULE_DATABASE_PORT}
      - SCHEDULE_DATABASE_NAME=${SCHEDULE_DATABASE_NAME}
      - SCHEDULE_DATABASE_USERNAME=${SCHEDULE_DATABASE_USERNAME}
      - SCHEDULE_DATABASE_PASSWORD=${SCHEDULE_DATABASE_PASSWORD}
    restart: always
    depends_on:
      - degree_auth_db
      - degree_auth_service
      - degree_schedule_db
      - degree_task_db
    networks:
      - degree_network

  degree_auth_db:
    container_name: auth_db
    image: postgres:14.5-alpine
    ports:
      - "${AUTH_DATABASE_PORT}:${AUTH_DATABASE_PORT}"
    environment:
      POSTGRES_USER: ${AUTH_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${AUTH_DATABASE_PASSWORD}
      POSTGRES_DB: ${AUTH_DATABASE_NAME}
    command: -p ${AUTH_DATABASE_PORT}
    volumes:
      - degree_auth_db:/var/lib/postgresql/data
      - ./auth_db/:/docker-entrypoint-initdb.d
    networks:
      - degree_network

  degree_schedule_db:
    container_name: schedule_db
    image: postgres:14.5-alpine
    ports:
      - "${SCHEDULE_DATABASE_PORT}:${SCHEDULE_DATABASE_PORT}"
    environment:
      POSTGRES_USER: ${SCHEDULE_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${SCHEDULE_DATABASE_PASSWORD}
      POSTGRES_DB: ${SCHEDULE_DATABASE_NAME}
    command: -p ${SCHEDULE_DATABASE_PORT}
    volumes:
      - degree_schedule_db:/var/lib/postgresql/data
      - ./schedule_db/:/docker-entrypoint-initdb.d
    networks:
      - degree_network

  degree_task_db:
    container_name: task_db
    image: postgres:14.5-alpine
    ports:
      - "${TASK_DATABASE_PORT}:${TASK_DATABASE_PORT}"
    environment:
      POSTGRES_USER: ${TASK_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${TASK_DATABASE_PASSWORD}
      POSTGRES_DB: ${TASK_DATABASE_NAME}
    command: -p ${TASK_DATABASE_PORT}
    volumes:
      - degree_task_db:/var/lib/postgresql/data
      - ./task_db/:/docker-entrypoint-initdb.d
    networks:
      - degree_network

volumes:
  degree_auth_db: {}
  degree_schedule_db: {}
  degree_task_db: {}

networks:
  degree_network:
    driver: bridge
